// ------------------------------------------------------------
// Commando .355 Carbine (Remade)
// The Commando Originates from a conflict the UAC was barely a part of, a conflict of interest in which armor was a consistant problem of the SMGs penetrating abilities & the ZM's jamming issues would cost lives.
// Commissioned from a competitor, the Commando lacks the DRM of typical UAC Rifle and is chambered in .355 to penetrate armor easily and eliminate targets, the Commando uses it's charging handle to clear feeding issues and can come equipped with a scope to pick off targets from afar.
// ------------------------------------------------------------

const HDLD_COMMANDO="c35";
const HDLD_COMMANDO_MAG="35m";


class HDCommando:ZM66ScopeHaver{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Commando"
		//$Sprite "C9MAA0"

		-hdweapon.fitsinbackpack //Nah, this is .355 BITCH!
		obituary "%o was peppered by %k's murder stream.";
		weapon.selectionorder 24;
		weapon.slotnumber 2;
		weapon.slotpriority 2;
		weapon.kickback 30;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.65;
		inventory.pickupmessage "You got the Commando .355 Carbine!";
		hdweapon.barrelsize 28,0.5,1;
		hdweapon.refid HDLD_COMMANDO;
		tag "Commando .355 Carbine";
		//inventory.icon "C9MA"; //genuinely, what the fuck does this even do? | i dunno but it fixed an issue i had [ted]

		hdweapon.loadoutcodes "
			\cufiremode - 0-2, semi/burst/auto
			\cufireswitch - 0-4, default/semi/auto/full/all
			\cuscope - 0-1, no/yes";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	override double gunmass(){
		return 5.5+(weaponstatus[COMMANDO_MAG]<0)?-0.5:(weaponstatus[COMMANDO_MAG]*0.02); //Honestly, I really, really dont like this [Cozi]
	}
	override double weaponbulk(){
		int mg=weaponstatus[COMMANDO_MAG];
		if(mg<0)return 95;
		else return (95+ENC_9MAG30_LOADED)+mg*ENC_355_LOADED;
	}
	override void failedpickupunload(){
		failedpickupunloadmag(COMMANDO_MAG,"HDCommando355Mag25");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HDRevolverAmmo"))owner.A_DropInventory("HDRevolverAmmo",amt*30);
			else owner.A_DropInventory("HDCommando355Mag25",amt);
		}
	}
	override void postbeginplay(){
		super.postbeginplay();
		weaponspecial=1337; // UaS Sling Compatibility - [Ted]
		if(weaponstatus[COMMANDO_AUTO]>0){
		switch(weaponstatus[COMMANDO_SWITCHTYPE]){
		case 1:
			weaponstatus[COMMANDO_AUTO]=0;
			break;
		case 2:
			weaponstatus[COMMANDO_AUTO]=1;
			break;
		//case 3:
			//weaponstatus[COMMANDO_AUTO]=2;
			//break;
		default:
			break;
		}}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HDRevolverAmmo");
		ForceOneBasicAmmo("HDCommando355Mag25");
	}

		override string,double getpickupsprite(bool usespare){
		string spr;
		
		int wep0=GetSpareWeaponValue(0,usespare);

		if(wep0&COMMANDO_SCOPE)
				spr="C9MP";
			else spr="C9MP";

		//set to no-mag frame
		if(GetSpareWeaponValue(ZM66S_MAG,usespare)<0)spr=spr.."B";
		else spr=spr.."A";

		return spr.."0",1.;
	}
	
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HDCommando355Mag25")));
			if(nextmagloaded>=25){
				sb.drawimage("C9MAA0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(3,3));
			}else if(nextmagloaded<1){
				sb.drawimage("C9MAA0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(3,3));
			}else sb.drawbar(
				"CLP3NORM","CLP3GREY",  //black box. "C9MAA0","",
				nextmagloaded,25,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HDCommando355Mag25"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		if(weaponstatus[COMMANDO_SWITCHTYPE]!=1)sb.drawwepcounter(hdw.weaponstatus[COMMANDO_AUTO],
			-22,-10,"RBRSA3A7","STBURAUT","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[COMMANDO_MAG],25);
		if(hdw.weaponstatus[COMMANDO_CHAMBER]==2)sb.drawrect(-19,-11,3,1);
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload mag\n"
		..WEPHELP_USE.."+"..WEPHELP_RELOAD.."  Reload chamber\n"
		..WEPHELP_FIREMODE.."  Semi/Burst\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc
	){
		if(weaponstatus[COMMANDO_SCOPE]==1){
			int scaledyoffset=47;
			ShowZMScope(hdw.weaponstatus[COMMANDO_ZOOM],hpc,sb,scaledyoffset,bob);
		}else{
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*3;
		bobb.y=clamp(bobb.y,-8,8);
		sb.drawimage(
			"CLT9_ST1",(0,-3)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9,scale:(0.75,0.75)
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"backsite",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP
		);
		}
	}
	override void SetReflexReticle(int which){weaponstatus[COMMANDO_SCOPE]=which;}
	action void A_CheckScope(){
		if(invoker.weaponstatus[COMMANDO_SCOPE]==1)
		Player.GetPSprite(PSP_WEAPON).sprite=getspriteindex("C9MPE0"); //Sprites for scoped version.
	}
	states{
	select0:
		C9MG A 0;
		C9MG A 0;
		goto select0small;
	deselect0:
		C9MG A 0;
		#### A 0;
		goto deselect0small;

	ready:
		C9MG A 0;
		#### A 1{
			A_SetCrosshair(21);
			invoker.weaponstatus[COMMANDO_RATCHET]=0;
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HDCommando355Mag25");
		goto ready;
	altfire:
		goto chamber_manual;
	althold:
		goto nope;
	hold:
		#### A 0{
			if(
				invoker.weaponstatus[COMMANDO_CHAMBER]==2  //live round chambered
				&&(
						invoker.weaponstatus[COMMANDO_AUTO]==1  //burst
						&&invoker.weaponstatus[COMMANDO_RATCHET]<=2
				)
			)setweaponstate("fire2");
		}goto nope;
	user2:
	firemode:
		---- A 1{
			int canaut=invoker.weaponstatus[COMMANDO_SWITCHTYPE];
			if(canaut==1){
				invoker.weaponstatus[COMMANDO_AUTO]=0;
				return;
			}
			int maxmode=(canaut>0)?(canaut-1):1;
			int aut=invoker.weaponstatus[COMMANDO_AUTO];
			if(aut>=maxmode)invoker.weaponstatus[COMMANDO_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[COMMANDO_AUTO]=0;
			else if(canaut>0)invoker.weaponstatus[COMMANDO_AUTO]=maxmode;
			else invoker.weaponstatus[COMMANDO_AUTO]++;
		}goto nope;
	fire:
		#### A 0;
	fire2:
		#### B 1{
			if(invoker.weaponstatus[COMMANDO_CHAMBER]==2)A_GunFlash();
			else setweaponstate("chamber_manual");
		}
		#### A 1;
		#### A 0{
			if(invoker.weaponstatus[COMMANDO_CHAMBER]==1){
				A_EjectCasing("HDSpent355",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(7,7.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COMMANDO_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COMMANDO_MAG]>0){
				invoker.weaponstatus[COMMANDO_MAG]--;
				invoker.weaponstatus[COMMANDO_CHAMBER]=2;
			}
		}
		#### A 0 A_ReFire();
		goto ready;
	flash:
		C9MF A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_355",speedfactor:1.1);
			A_AlertMonsters(200);
			//A_ZoomRecoil(1.15);
			A_StartSound("weapons/smg/355",CHAN_WEAPON,volume:0.7);
			invoker.weaponstatus[COMMANDO_RATCHET]++;
			invoker.weaponstatus[COMMANDO_CHAMBER]=1;
		}
		C9MF A 1 bright{
			HDFlashAlpha(15);
			A_Light1();
		}
		TNT1 A 0 A_MuzzleClimb(-frandom(0.35,0.4),-frandom(0.45,0.5),-frandom(0.35,0.35),-frandom(0.4,0.45));
		goto lightdone;


	unloadchamber:
		#### B 4 A_JumpIf(invoker.weaponstatus[COMMANDO_CHAMBER]<1,"nope");
		#### B 10{
			A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.5);
			class<actor>which=invoker.weaponstatus[COMMANDO_CHAMBER]>1?"HDRevolverAmmo":"HDSpent355";
			invoker.weaponstatus[COMMANDO_CHAMBER]=0;
			A_SpawnItemEx(which,
				cos(pitch)*10,0,height*0.82-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
		}goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[COMMANDO_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HDRevolverAmmo"),"nope");
		---- A 1 offset(0,34) A_StartSound("weapons/pocket",9);
		---- A 1 offset(2,36);
		---- A 1 offset(2,44);
		#### B 1 offset(5,58);
		#### B 2 offset(7,70);
		#### B 6 offset(8,80);
		#### A 10 offset(8,87){
			if(countinv("HDRevolverAmmo")){
				A_TakeInventory("HDRevolverAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[COMMANDO_CHAMBER]=2;
				A_StartSound("weapons/smg/355/fwd",CHAN_WEAPON);
			}else A_SetTics(4);
		}
		#### A 3 offset(9,76);
		---- A 2 offset(5,70);
		---- A 1 offset(5,64);
		---- A 1 offset(5,52);
		---- A 1 offset(5,42);
		---- A 1 offset(2,36);
		---- A 2 offset(0,34);
		goto nope;
	user4:
	unload:
		#### A 0{
			invoker.weaponstatus[0]|=COMMANDO_JUSTUNLOAD;
			if(
				invoker.weaponstatus[COMMANDO_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[COMMANDO_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		#### A 0{
			invoker.weaponstatus[0]&=~COMMANDO_JUSTUNLOAD;
			bool nomags=HDMagAmmo.NothingLoaded(self,"HDCommando355Mag25");
			if(invoker.weaponstatus[COMMANDO_MAG]>=30)setweaponstate("nope");
			else if(
				invoker.weaponstatus[COMMANDO_MAG]<1
				&&(
					pressinguse()
					||nomags
				)
			){
				if(
					countinv("HDRevolverAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}else if(nomags)setweaponstate("nope");
		}goto unmag;
	unmag:
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(5,38);
		#### A 1 offset(10,42);
		#### B 2 offset(20,46) A_StartSound("weapons/smgmagclick",8);
		#### B 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			A_StartSound("weapons/smgmagmove",8,CHANF_OVERLAP);
		}
		#### B 0{
			int magamt=invoker.weaponstatus[COMMANDO_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[COMMANDO_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HDCommando355Mag25",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HDCommando355Mag25",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HDCommando355Mag25",magamt);
				A_StartSound("weapons/pocket",9);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### BB 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### B 0{
			if(invoker.weaponstatus[0]&COMMANDO_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### B 0 A_StartSound("weapons/pocket",9);
		#### B 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### B 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### B 10 offset(32,50);
		#### B 3 offset(32,49){
			let mmm=hdmagammo(findinventory("HDCommando355Mag25"));
			if(mmm){
				invoker.weaponstatus[COMMANDO_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/smgmagclick",8,CHANF_OVERLAP);
			}
			if(
				invoker.weaponstatus[COMMANDO_MAG]<1
				||invoker.weaponstatus[COMMANDO_CHAMBER]>0
			)setweaponstate("reloadend");
		}
		goto reloadend;

	reloadend:
		#### E 3 offset(30,52);
		#### E 2 offset(20,46);
		#### D 1 offset(10,42);
		#### C 1 offset(5,38);
		#### A 1 offset(0,34);
		goto chamber_manual;

	chamber_manual:
		#### A 0 A_JumpIf(
			invoker.weaponstatus[COMMANDO_MAG]<1
			||invoker.weaponstatus[COMMANDO_CHAMBER]==2
		,"nope");
		C9MG E 2 offset(33,50){
			A_WeaponBusy();
			invoker.weaponstatus[COMMANDO_MAG]--;
			invoker.weaponstatus[COMMANDO_CHAMBER]=2;
		}
		#### E 4 offset(32,49) A_StartSound("weapons/smg/355/fwd",CHAN_WEAPON);
		#### E 3 offset(30,52);
		#### E 2 offset(20,46);
		#### D 1 offset(10,42);
		#### C 1 offset(5,38);
		#### A 1 offset(0,34);
		goto nope;


	spawn:
		TNT1 A 1;
		C9MP A -1{
			if(invoker.weaponstatus[COMMANDO_MAG]<0)frame=1;
			if(
				invoker.weaponstatus[COMMANDO_SCOPE]==1
			)invoker.sprite=getspriteindex("C9MPA0");
		}
		C9MP # -1;
		stop;
	}
	override void initializewepstats(bool idfa){
		weaponstatus[COMMANDO_MAG]=25;
		weaponstatus[COMMANDO_CHAMBER]=2;
		weaponstatus[COMMANDO_ZOOM]=30;
	}
	override void loadoutconfigure(string input){
		int firemode=getloadoutvar(input,"firemode",1);
		if(firemode>=0)weaponstatus[COMMANDO_AUTO]=clamp(firemode,0,1);

		int xhdot=getloadoutvar(input,"dot",3);
		int scope=getloadoutvar(input,"scope",1);
		if(
			!scope
		)weaponstatus[COMMANDO_SCOPE]==1;
		else{
			weaponstatus[COMMANDO_SCOPE]=0;
		}

		int fireswitch=getloadoutvar(input,"fireswitch",1);
		if(fireswitch>3)weaponstatus[COMMANDO_SWITCHTYPE]=0;
		else if(fireswitch>0)weaponstatus[COMMANDO_SWITCHTYPE]=clamp(fireswitch,0,3);
	}
}
enum commandostatus{
	COMMANDO_JUSTUNLOAD=1,
	COMMANDO_SCOPE=0,

	COMMANDO_SEMIONLY=1,
	COMMANDO_BURSTONLY=2,
	COMMANDO_FULLONLY=3,

	COMMANDO_FLAGS=0,
	COMMANDO_MAG=1,
	COMMANDO_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	COMMANDO_AUTO=3, //0 semi, 1 burst, 2 auto
	COMMANDO_RATCHET=4,
	COMMANDO_SWITCHTYPE=5,
	//COMMANDO_DOT=6,
	COMMANDO_ZOOM=10,
};

class HDCommando355Mag25:HD9mmag15{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "Commando Magazine"
		//$Sprite "CLP3A0"
		
		scale 0.65;
		hdmagammo.roundtype "HDRevolverAmmo";
		hdmagammo.roundbulk ENC_355_LOADED;
		hdmagammo.maxperunit 25;
		hdmagammo.magbulk ENC_9MAG30_EMPTY;
		tag ".355 Magazine";
		inventory.pickupmessage "Picked up a Commando .355 magazine.";
		hdpickup.refid HDLD_COMMANDO_MAG;
	}
	override string,string,name,double getmagsprite(int thismagamt){
		string magsprite=(thismagamt>0)?"C9MAA0":"C9MAB0";
		return magsprite,"C9MAA0","HDRevolverAmmo",2.;
	}
	override void GetItemsThatUseThis(){
		itemsthatusethis.push("HDCommando");
	}
	states{
	spawn:
		C9MA A -1;
		stop;
	spawnempty:
		C9MA B -1{
			brollsprite=true;brollcenter=true;
			roll=randompick(0,0,0,0,2,2,2,2,1,3)*90;
		}stop;
	}
}

class HDCommando355Mag25_Empty:IdleDummy{
	override void postbeginplay(){
		super.postbeginplay();
		HDMagAmmo.SpawnMag(self,"HDCommando355Mag25",0);
		destroy();
	}
}

class HDCommandoRandom:IdleDummy{
	states{
	spawn:
		TNT1 A 0 nodelay{
			let lll=HDCommando(spawn("HDCommando",pos,ALLOW_REPLACE));
			if(!lll)return;
			lll.special=special;
			lll.vel=vel;
			for(int i=0;i<5;i++)lll.args[i]=args[i];
			if(!random(0,2))lll.weaponstatus[0]|=COMMANDO_SCOPE;
			if(!random(0,2))lll.weaponstatus[COMMANDO_SWITCHTYPE]=random(0,1);
		}stop;
	}
}

class HD_CommandoDropper:IdleDummy{
    states{
    spawn:
        TNT1 A 0 nodelay{
			A_SpawnItemEx("HDCommando355Mag25",frandom(-12,12),frandom(-12,12),frandom(-12,12),0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDCommando355Mag25",frandom(-12,12),frandom(-12,12),frandom(-12,12),0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDCommando355Mag25",frandom(-12,12),frandom(-12,12),frandom(-12,12),0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDCommandoRandom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
        }stop;
    }
}